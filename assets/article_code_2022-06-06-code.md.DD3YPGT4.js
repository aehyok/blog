import{_ as i,c as l,o as t,ag as s}from"./chunks/framework.ELrfyV9R.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"article/code/2022-06-06-code.md","filePath":"article/code/2022-06-06-code.md","lastUpdated":1758764735000}'),a={name:"article/code/2022-06-06-code.md"};function r(n,e,p,h,o,c){return t(),l("div",null,e[0]||(e[0]=[s('<ul><li><p>eventemitter3</p><ul><li>观察模式 发布 订阅 <a href="https://www.cnblogs.com/wuyz-harder/p/15597330.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/wuyz-harder/p/15597330.html</a></li><li>观察者模式和发布订阅模式的区别 <a href="https://juejin.cn/post/7055441354054172709" target="_blank" rel="noreferrer">https://juejin.cn/post/7055441354054172709</a><ul><li>观察者模式</li><li>vue3 双向数据绑定</li></ul></li></ul></li><li><p>babel 编译相关</p><ul><li><a href="https://juejin.cn/post/6844904035271573511#comment" target="_blank" rel="noreferrer">https://juejin.cn/post/6844904035271573511#comment</a><ul><li>@babel/parser 将js代码------&gt;&gt;&gt; AST抽象语法树</li><li>@babel/traverse对AST节点进行递归遍历</li><li>@babel/types 对具体的AST节点进行修改</li><li>@babel/generator AST抽象语法树-----&gt;&gt;&gt;生成新的js代码</li></ul></li></ul></li><li><p>htmlparser2 转换</p><ul><li><a href="https://github.com/fb55/htmlparser2" target="_blank" rel="noreferrer">https://github.com/fb55/htmlparser2</a></li><li><a href="https://github.com/fb55/htmlparser2/wiki/Parser-options" target="_blank" rel="noreferrer">https://github.com/fb55/htmlparser2/wiki/Parser-options</a></li></ul></li><li><p>生成id</p><ul><li><a href="https://juejin.cn/post/7039960318897815565#comment" target="_blank" rel="noreferrer">https://juejin.cn/post/7039960318897815565#comment</a></li></ul></li><li><p>bundle-core-esm.js 生成代码</p><ul><li>vueTemplate() // 默认文</li></ul></li><li><p>codemirror</p><ul><li>react <a href="https://juejin.cn/post/6844904086443720717" target="_blank" rel="noreferrer">https://juejin.cn/post/6844904086443720717</a></li><li>vue3 codemirror-editor-vue3</li></ul></li><li><p>eval+ new Function</p><ul><li>demo3 + demo4</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    eval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`console.log(&#39;hello code&#39;)`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    eval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`console.log(`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">${c}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`)</span></span></code></pre></div></li></ul>',1)]))}const u=i(a,[["render",r]]);export{d as __pageData,u as default};
