import{_ as l,c as s,o as n,ag as e}from"./chunks/framework.ELrfyV9R.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"article/code/2025-04-12-anythingllm.md","filePath":"article/code/2025-04-12-anythingllm.md","lastUpdated":1757580971000}'),t={name:"article/code/2025-04-12-anythingllm.md"};function i(p,a,o,r,c,d){return n(),s("div",null,a[0]||(a[0]=[e(`<h2 id="初始化本地环境" tabindex="-1">初始化本地环境 <a class="header-anchor" href="#初始化本地环境" aria-label="Permalink to &quot;初始化本地环境&quot;">​</a></h2><ul><li><p><a href="https://blog.csdn.net/Zhangmaoyang/article/details/146253209" target="_blank" rel="noreferrer">https://blog.csdn.net/Zhangmaoyang/article/details/146253209</a></p></li><li><p>前端</p><ul><li>yarn dev:frontend</li><li><a href="http://localhost:3000/" target="_blank" rel="noreferrer">http://localhost:3000/</a></li><li>root admin!!!???</li></ul></li><li><p>后端</p><ul><li>yarn dev:server</li><li><a href="http://localhost:3001/api" target="_blank" rel="noreferrer">http://localhost:3001/api</a></li></ul></li><li><p>文档收集器</p><ul><li>yarn dev:collector</li></ul></li><li><p>swagger</p><ul><li><a href="http://localhost:3001/api/docs/" target="_blank" rel="noreferrer">http://localhost:3001/api/docs/</a></li></ul></li></ul><h2 id="查看端口占用" tabindex="-1">查看端口占用 <a class="header-anchor" href="#查看端口占用" aria-label="Permalink to &quot;查看端口占用&quot;">​</a></h2><ul><li><p>netstat -ano | findstr :3000</p></li><li><p>再来查看具体的应用</p><ul><li>tasklist | findstr 48352 通过任务管理器中的进程杀死即可</li></ul></li></ul><h2 id="向量数据库客户端" tabindex="-1">向量数据库客户端 <a class="header-anchor" href="#向量数据库客户端" aria-label="Permalink to &quot;向量数据库客户端&quot;">​</a></h2><ul><li><a href="https://github.com/zilliztech/attu" target="_blank" rel="noreferrer">https://github.com/zilliztech/attu</a></li><li>模糊查询 metadata[&quot;title&quot;] like &quot;%财务%&quot;</li></ul><h2 id="ollama-命令" tabindex="-1">ollama 命令 <a class="header-anchor" href="#ollama-命令" aria-label="Permalink to &quot;ollama 命令&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> // 列出所有的模型</span></span>
<span class="line"><span> ollama ls</span></span>
<span class="line"><span></span></span>
<span class="line"><span> // 正在运行的模型</span></span>
<span class="line"><span> ollama ps</span></span>
<span class="line"><span></span></span>
<span class="line"><span> // 查看ollama服务运行状态</span></span>
<span class="line"><span> systemctl status ollama</span></span>
<span class="line"><span></span></span>
<span class="line"><span> // 如果停止了服务 重新开启服务</span></span>
<span class="line"><span>ollama serve</span></span></code></pre></div><h2 id="docker与宿主机器中拷贝文件" tabindex="-1">docker与宿主机器中拷贝文件 <a class="header-anchor" href="#docker与宿主机器中拷贝文件" aria-label="Permalink to &quot;docker与宿主机器中拷贝文件&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// 宿主机器到docker容器</span></span>
<span class="line"><span>sudo docker cp yarn.lock 8aa8db19bbde:/app/yarn.lock</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// docker容器到宿主机器</span></span>
<span class="line"><span>sudo docker cp  8aa8db19bbde:/app/yarn.lock lqm/</span></span></code></pre></div>`,10)]))}const m=l(t,[["render",i]]);export{u as __pageData,m as default};
