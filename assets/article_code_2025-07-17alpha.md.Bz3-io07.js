import{_ as n,c as s,o as p,ag as e}from"./chunks/framework.mJdS8VI0.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"article/code/2025-07-17alpha.md","filePath":"article/code/2025-07-17alpha.md","lastUpdated":1753180181000}'),l={name:"article/code/2025-07-17alpha.md"};function t(c,a,i,o,r,u){return p(),s("div",null,a[0]||(a[0]=[e(`<h2 id="获取api-key地址" tabindex="-1">获取API Key地址 <a class="header-anchor" href="#获取api-key地址" aria-label="Permalink to &quot;获取API Key地址&quot;">​</a></h2><ul><li><a href="https://docs.etherscan.io/etherscan-v2/getting-an-api-key" target="_blank" rel="noreferrer">https://docs.etherscan.io/etherscan-v2/getting-an-api-key</a></li><li><a href="https://etherscan.io/apidashboard" target="_blank" rel="noreferrer">https://etherscan.io/apidashboard</a></li></ul><h2 id="api-所支持的链" tabindex="-1">API 所支持的链 <a class="header-anchor" href="#api-所支持的链" aria-label="Permalink to &quot;API 所支持的链&quot;">​</a></h2><ul><li><a href="https://docs.etherscan.io/etherscan-v2/supported-chains" target="_blank" rel="noreferrer">https://docs.etherscan.io/etherscan-v2/supported-chains</a></li></ul><h2 id="参考项目" tabindex="-1">参考项目 <a class="header-anchor" href="#参考项目" aria-label="Permalink to &quot;参考项目&quot;">​</a></h2><ul><li><a href="https://github.com/holazz/bn-alpha" target="_blank" rel="noreferrer">https://github.com/holazz/bn-alpha</a></li></ul><h2 id="可参考接口地址" tabindex="-1">可参考接口地址 <a class="header-anchor" href="#可参考接口地址" aria-label="Permalink to &quot;可参考接口地址&quot;">​</a></h2><ul><li><a href="http://cw.hubwiz.com/card/c/etherscan-api/1/1/7/" target="_blank" rel="noreferrer">http://cw.hubwiz.com/card/c/etherscan-api/1/1/7/</a></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>blockHash</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;0xd7499e83bfb7ee524531c864de8fcb409c125d1ea464bd592c3f5d8ae2c8194f&quot;</span></span>
<span class="line"><span>blockNumber</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;54798674&quot;</span></span>
<span class="line"><span>confirmations</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;77984&quot;</span></span>
<span class="line"><span>contractAddress</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;0xe6df05ce8c8301223373cf5b969afcb1498c5528&quot;</span></span>
<span class="line"><span>cumulativeGasUsed</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;10120823&quot;</span></span>
<span class="line"><span>from</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;0xf05e440e444c1629f73caf142f7aad09ed9453ca&quot;</span></span>
<span class="line"><span>functionName</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;proxySwapV2(address router,uint256 fromTokenWithFee,uint256 fromAmt,uint256 toTokenWithFee,uint256 minReturnAmt,bytes callData)&quot;</span></span>
<span class="line"><span>gas</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;379020&quot;</span></span>
<span class="line"><span>gasPrice</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;110000000&quot;</span></span>
<span class="line"><span>gasUsed</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;197146&quot;</span></span>
<span class="line"><span>hash</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;0xe5a0f7d251ea5dbaae99b2e8f085bde85d2aa6f9f663753a8ca3a85aa0998022&quot;</span></span>
<span class="line"><span>input</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;deprecated&quot;</span></span>
<span class="line"><span>methodId</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;0xe5e8894b&quot;</span></span>
<span class="line"><span>nonce</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;2058&quot;</span></span>
<span class="line"><span>timeStamp</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;1753096930&quot;</span></span>
<span class="line"><span>to</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;0xb300000b72deaeb607a12d5f54773d1c19c7028d&quot;</span></span>
<span class="line"><span>tokenDecimal</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;18&quot;</span></span>
<span class="line"><span>tokenName</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;BNB48 Club Token&quot;</span></span>
<span class="line"><span>tokenSymbol</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;KOGE&quot;</span></span>
<span class="line"><span>transactionIndex</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;47&quot;</span></span>
<span class="line"><span>value</span></span>
<span class="line"><span>: </span></span>
<span class="line"><span>&quot;21351363293833475436&quot;</span></span></code></pre></div>`,9)]))}const q=n(l,[["render",t]]);export{d as __pageData,q as default};
