import{_ as s,c as n,o as p,ag as e}from"./chunks/framework.mJdS8VI0.js";const q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"article/code/2023-05-26-mongodb.md","filePath":"article/code/2023-05-26-mongodb.md","lastUpdated":1750416257000}'),t={name:"article/code/2023-05-26-mongodb.md"};function l(o,a,i,c,u,d){return p(),n("div",null,a[0]||(a[0]=[e(`<h2 id="mongodb" tabindex="-1">mongodb <a class="header-anchor" href="#mongodb" aria-label="Permalink to &quot;mongodb&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// 查询整个表数据</span></span>
<span class="line"><span>db.chats.find()</span></span>
<span class="line"><span>db.getCollection(&#39;chats&#39;).find()</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 查询一条数据</span></span>
<span class="line"><span>db.chats.findOne({&quot;userId&quot;: ObjectId(&quot;6465e9d8c54af94e4ce8c0e5&quot;)})</span></span>
<span class="line"><span>db.getCollection(&#39;chats&#39;).findOne({&quot;userId&quot;: ObjectId(&quot;6465e9d8c54af94e4ce8c0e5&quot;)})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ObjectId字段的类型要在查询条件中进行转换</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.chats.find({&quot;userId&quot;: ObjectId(&quot;6465e9d8c54af94e4ce8c0e5&quot;)})</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 删除操作（删除匹配的所有记录）</span></span>
<span class="line"><span>db.chats.remove({ &quot;userId&quot;: &quot;123&quot; })</span></span>
<span class="line"><span>db.chats.deleteMany({ &quot;userId&quot;: &quot;123&quot; })</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 删除 匹配的第一个文档</span></span>
<span class="line"><span>db.chats.remove({ &quot;userId&quot;: &quot;123&quot; }, { justOne: true })</span></span>
<span class="line"><span>db.chats.deleteOne({ &quot;userId&quot;: &quot;123&quot; })</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 删除整个集合</span></span>
<span class="line"><span>db.chats.drop()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 修改数据集合</span></span>
<span class="line"><span>// 只修改一个字段</span></span>
<span class="line"><span>db.chats.updateOne({ &quot;userId&quot;: &quot;123&quot; }, { $set: { &quot;status&quot;: &quot;active&quot; } })</span></span></code></pre></div><h2 id="查询指定的字段" tabindex="-1">查询指定的字段 <a class="header-anchor" href="#查询指定的字段" aria-label="Permalink to &quot;查询指定的字段&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// 第二个参数就是查询列表中要显示的字段，_id: 0 则代表不显示_id字段</span></span>
<span class="line"><span>db.collection.find( {}, { field1: 1, field2: 1, _id: 0 } )</span></span></code></pre></div><h2 id="向已有文档中添加字段" tabindex="-1">向已有文档中添加字段 <a class="header-anchor" href="#向已有文档中添加字段" aria-label="Permalink to &quot;向已有文档中添加字段&quot;">​</a></h2><p>// 添加两个字段 设置日期字段为当前时间</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>db.companies.updateMany(</span></span>
<span class="line"><span>   {},</span></span>
<span class="line"><span>	 </span></span>
<span class="line"><span>   {</span></span>
<span class="line"><span>		$currentDate: { &quot;createdAt&quot;: { $type: &quot;date&quot; }}, 	</span></span>
<span class="line"><span>		$set: { &quot;createBy&quot; : &quot;&quot; } </span></span>
<span class="line"><span>	 }</span></span>
<span class="line"><span>)</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>// $set: { &quot;specificDate&quot;: new Date(&quot;2023-06-06&quot;) }</span></span></code></pre></div><h2 id="添加字段" tabindex="-1">添加字段 <a class="header-anchor" href="#添加字段" aria-label="Permalink to &quot;添加字段&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>db.models.updateMany(</span></span>
<span class="line"><span>   {},</span></span>
<span class="line"><span>   { $set: { &quot;remark1&quot; : &quot;&quot; } }</span></span>
<span class="line"><span>)</span></span></code></pre></div><h2 id="修改字段名" tabindex="-1">修改字段名 <a class="header-anchor" href="#修改字段名" aria-label="Permalink to &quot;修改字段名&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// 将字段remark1修改为remark2</span></span>
<span class="line"><span>db.models.updateMany(</span></span>
<span class="line"><span>   { },</span></span>
<span class="line"><span>   { $rename: { &quot;remark1&quot;: &quot;remark2&quot; } }</span></span>
<span class="line"><span>)</span></span></code></pre></div><h2 id="移除字段" tabindex="-1">移除字段 <a class="header-anchor" href="#移除字段" aria-label="Permalink to &quot;移除字段&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>db.models.updateMany(</span></span>
<span class="line"><span>   {},</span></span>
<span class="line"><span>   {</span></span>
<span class="line"><span>     $unset: { &quot;remark1&quot;: &quot;&quot; }</span></span>
<span class="line"><span>   }</span></span>
<span class="line"><span>)</span></span></code></pre></div><h2 id="mongodb-关联查询-通过主文档字段查询" tabindex="-1">mongodb 关联查询(通过主文档字段查询) <a class="header-anchor" href="#mongodb-关联查询-通过主文档字段查询" aria-label="Permalink to &quot;mongodb 关联查询(通过主文档字段查询)&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>const data = await Chat.aggregate([</span></span>
<span class="line"><span>   {</span></span>
<span class="line"><span>      $match: {</span></span>
<span class="line"><span>         userId: new mongoose.Types.ObjectId(userId)</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>   },</span></span>
<span class="line"><span>   {</span></span>
<span class="line"><span>      $lookup: {</span></span>
<span class="line"><span>         from: &#39;models&#39;,</span></span>
<span class="line"><span>         localField: &#39;modelId&#39;,</span></span>
<span class="line"><span>         foreignField: &#39;_id&#39;,</span></span>
<span class="line"><span>         as: &#39;modelInfo&#39;</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>   },</span></span>
<span class="line"><span>   {</span></span>
<span class="line"><span>      $project: {</span></span>
<span class="line"><span>         _id: 1, // 设置为 0 表示不显示</span></span>
<span class="line"><span>         title: 1, // 设置为 1 表示显示</span></span>
<span class="line"><span>         modelId: 1, // 设置为 1 表示显示</span></span>
<span class="line"><span>         updateTime: 1, // 设置为 1 表示显示</span></span>
<span class="line"><span>         latestChat: 1,</span></span>
<span class="line"><span>         &#39;modelInfo.name&#39;: 1,</span></span>
<span class="line"><span>         &#39;modelInfo.remark&#39;: 1</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>   },</span></span>
<span class="line"><span>   { $sort: { updateTime: -1 } },</span></span>
<span class="line"><span>   { $limit: 5 }</span></span>
<span class="line"><span>   ]);</span></span></code></pre></div><h2 id="创建字典分组和字典项集合" tabindex="-1">创建字典分组和字典项集合 <a class="header-anchor" href="#创建字典分组和字典项集合" aria-label="Permalink to &quot;创建字典分组和字典项集合&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>db.createCollection(&quot;dictionarygroup&quot;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.dictionarygroup.insertOne({</span></span>
<span class="line"><span>  name: &quot;&quot;,</span></span>
<span class="line"><span>  code: &quot;&quot;,</span></span>
<span class="line"><span>  order: 0,</span></span>
<span class="line"><span>  remark: &quot;&quot;,</span></span>
<span class="line"><span>  isDeleted: false,</span></span>
<span class="line"><span>  createdAt: new Date(),</span></span>
<span class="line"><span>  createdBy: ObjectId(&quot;617e957f64a6c3e07ad1bfb1&quot;), // Modify the ObjectId value as per your requirement</span></span>
<span class="line"><span>  updatedAt: new Date(),</span></span>
<span class="line"><span>  updatedBy: ObjectId(&quot;617e957f64a6c3e07ad1bfb2&quot;), // Modify the ObjectId value as per your requirement</span></span>
<span class="line"><span>  isSystem: false</span></span>
<span class="line"><span>});</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.createCollection(&quot;dictionaryitem&quot;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.dictionaryitem.insertOne({</span></span>
<span class="line"><span>  _id: ObjectId(&quot;617e957f64a6c3e07ad1bfb1&quot;), // Modify the ObjectId value as per your requirement</span></span>
<span class="line"><span>  name: &quot;&quot;,</span></span>
<span class="line"><span>  code: &quot;&quot;,</span></span>
<span class="line"><span>  dictionaryGroupId: ObjectId(&quot;617e957f64a6c3e07ad1bfb2&quot;), // Modify the ObjectId value as per your requirement</span></span>
<span class="line"><span>  parentId: ObjectId(&quot;617e957f64a6c3e07ad1bfb3&quot;), // Modify the ObjectId value as per your requirement</span></span>
<span class="line"><span>  order: 0,</span></span>
<span class="line"><span>  isEnable: false,</span></span>
<span class="line"><span>  remark: &quot;&quot;,</span></span>
<span class="line"><span>  isVisible: false,</span></span>
<span class="line"><span>  isDeleted: false,</span></span>
<span class="line"><span>  createdAt: new Date(),</span></span>
<span class="line"><span>  createdBy: ObjectId(&quot;617e957f64a6c3e07ad1bfb4&quot;), // Modify the ObjectId value as per your requirement</span></span>
<span class="line"><span>  updatedAt: new Date(),</span></span>
<span class="line"><span>  updatedBy: ObjectId(&quot;617e957f64a6c3e07ad1bfb5&quot;), // Modify the ObjectId value as per your requirement</span></span>
<span class="line"><span>  isSystem: false</span></span>
<span class="line"><span>});</span></span></code></pre></div><h2 id="创建题库集合" tabindex="-1">创建题库集合 <a class="header-anchor" href="#创建题库集合" aria-label="Permalink to &quot;创建题库集合&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>db.createCollection(&quot;questions&quot;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.questions.insertOne({</span></span>
<span class="line"><span>    &quot;question&quot;: &quot;问题内容&quot;,</span></span>
<span class="line"><span>    &quot;answer&quot;: &quot;答案内容&quot;,</span></span>
<span class="line"><span>    &quot;categoryId&quot;: ObjectId(&quot;617e957f64a6c3e07ad1bfb1&quot;),</span></span>
<span class="line"><span>    &quot;themeId&quot;: ObjectId(&quot;617e957f64a6c3e07ad1bfb1&quot;),</span></span>
<span class="line"><span>    &quot;order&quot;: &quot;顺序&quot;,</span></span>
<span class="line"><span>    &quot;isenable&quot;: true,</span></span>
<span class="line"><span>   &quot;isDeleted&quot;: false,</span></span>
<span class="line"><span>   &quot;createdAt&quot;: new Date(),</span></span>
<span class="line"><span>   &quot;createdBy&quot;: ObjectId(&quot;617e957f64a6c3e07ad1bfb1&quot;),</span><span> // Modify the ObjectId value as per your requirement</span></span>
<span class="line"><span>   &quot;updatedAt&quot;: new Date(),</span></span>
<span class="line"><span>   &quot;updatedBy&quot;: ObjectId(&quot;617e957f64a6c3e07ad1bfb2&quot;),</span><span> // Modify the ObjectId value as per your requirement</span></span>
<span class="line"><span>})</span></span></code></pre></div><h2 id="考卷" tabindex="-1">考卷 <a class="header-anchor" href="#考卷" aria-label="Permalink to &quot;考卷&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>db.createCollection(&quot;exampapers&quot;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.exampapers.insertOne({</span></span>
<span class="line"><span>    &quot;paperName&quot;: &quot;考卷名称&quot;,</span></span>
<span class="line"><span>    &quot;paperLevel&quot;: &quot;初级&quot;,</span><span> // 可以是 &quot;初级&quot;、&quot;中级&quot; 或 &quot;高级&quot;</span></span>
<span class="line"><span>    &quot;categoryId&quot;: &quot;分类选择&quot;,</span></span>
<span class="line"><span>    &quot;themeChoices&quot;: [&quot;主题1&quot;, &quot;主题2&quot;],</span><span> // 一个数组，包含了几个主题</span></span>
<span class="line"><span>    &quot;score&quot;: 0,</span><span> // 分数</span></span>
<span class="line"><span>		&quot;questionCount&quot;: 10,</span></span>
<span class="line"><span>		&quot;isDeleted&quot;: false,</span></span>
<span class="line"><span>		&quot;createdAt&quot;: new Date(),</span></span>
<span class="line"><span>		&quot;createdBy&quot;: ObjectId(&quot;617e957f64a6c3e07ad1bfb1&quot;),</span><span> // Modify the ObjectId value as per your requirement</span></span>
<span class="line"><span>		&quot;updatedAt&quot;: new Date(),</span></span>
<span class="line"><span>		&quot;updatedBy&quot;: ObjectId(&quot;617e957f64a6c3e07ad1bfb2&quot;),</span><span> // Modify the ObjectId value as per your requirement</span></span>
<span class="line"><span>})</span></span></code></pre></div><h2 id="考卷对应的考题和作答情况" tabindex="-1">考卷对应的考题和作答情况 <a class="header-anchor" href="#考卷对应的考题和作答情况" aria-label="Permalink to &quot;考卷对应的考题和作答情况&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>db.createCollection(&quot;examanswers&quot;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.examanswers.insertOne({</span></span>
<span class="line"><span>    &quot;paper_id&quot;: ObjectId(&quot;617e957f64a6c3e07ad1bfb1&quot;),</span></span>
<span class="line"><span>    &quot;question_id&quot;: ObjectId(&quot;617e957f64a6c3e07ad1bfb1&quot;),</span></span>
<span class="line"><span>    &quot;answerContent&quot;: &quot;回答内容&quot;,</span></span>
<span class="line"><span>    &quot;gptContent&quot;: &quot;gpt内容&quot;,</span></span>
<span class="line"><span>    &quot;score&quot;: 0,</span><span> // 分数</span></span>
<span class="line"><span>		&quot;isDeleted&quot;: false,</span></span>
<span class="line"><span>		&quot;createdAt&quot;: new Date(),</span></span>
<span class="line"><span>		&quot;createdBy&quot;: ObjectId(&quot;617e957f64a6c3e07ad1bfb1&quot;),</span><span> // Modify the ObjectId value as per your requirement</span></span>
<span class="line"><span>		&quot;updatedAt&quot;: new Date(),</span></span>
<span class="line"><span>		&quot;updatedBy&quot;: ObjectId(&quot;617e957f64a6c3e07ad1bfb2&quot;),</span><span> // Modify the ObjectId value as per your requirement</span></span>
<span class="line"><span>})</span></span></code></pre></div><h2 id="通过正则模糊查询" tabindex="-1">通过正则模糊查询 <a class="header-anchor" href="#通过正则模糊查询" aria-label="Permalink to &quot;通过正则模糊查询&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>db.models.find(</span></span>
<span class="line"><span>	{</span></span>
<span class="line"><span>		remark: {</span></span>
<span class="line"><span>			$regex: \`7\\\\.29\`,</span></span>
<span class="line"><span>			$options: &#39;ig&#39;</span></span>
<span class="line"><span>		}</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span>)</span></span></code></pre></div>`,25)]))}const b=s(t,[["render",l]]);export{q as __pageData,b as default};
