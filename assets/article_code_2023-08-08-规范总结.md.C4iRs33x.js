import{_ as e,c as a,o as i,ag as o}from"./chunks/framework.mJdS8VI0.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"article/code/2023-08-08-规范总结.md","filePath":"article/code/2023-08-08-规范总结.md","lastUpdated":1751017616000}'),c={name:"article/code/2023-08-08-规范总结.md"};function s(n,t,g,l,r,m){return i(),a("div",null,t[0]||(t[0]=[o('<h2 id="git-commit时设置为自己的中文姓名" tabindex="-1">git commit时设置为自己的中文姓名 <a class="header-anchor" href="#git-commit时设置为自己的中文姓名" aria-label="Permalink to &quot;git commit时设置为自己的中文姓名&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git config --global user.name &quot;刘启明&quot;</span></span></code></pre></div><p>system系统级（安装路径/etc/gitconfig）： 系统级配置文件，对系统中所有用户都普遍适用的配置。使用 git config --system读写的就是这个文件。</p><p>global用户级（C:/Users/用户名/.gitconfig）： 用户级配置文件，用户目录下的配置文件只适用于该用户。使用 git config --global读写的就是这个文件。</p><p>local项目级（某仓库的本地路径/.git/config）： 项目级配置文件，当前项目的 git仓库目录中的配置文件（也就是工作目录中的 .git/config 文件）,这里的配置仅仅针对当前项目有效。使用 git config --local或 省略 local参数，读写的就是这个文件。</p><p>worktree工作区级： 工作区级配置，此配置仅仅针对当前工作区有效。使用 git config --worktree进行配置。</p><p>每一个级别的配置都会覆盖上层的相同配置，所以 .git/config 里的配置会覆盖 /etc/gitconfig 中的同名变量。</p><h2 id="git-commit-message详细设置" tabindex="-1">git commit message详细设置 <a class="header-anchor" href="#git-commit-message详细设置" aria-label="Permalink to &quot;git commit message详细设置&quot;">​</a></h2><p>feat fix chore 内容设置稍微详细一点，看到内容大致就知道改了什么bug，加了什么功能，改了什么样式 调整了什么代码</p><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h2>',10)]))}const _=e(c,[["render",s]]);export{d as __pageData,_ as default};
